name: Actions ðŸ˜Ž

on: [push, pull_request]

jobs:
  build-linux:
    name: Build for ${{ matrix.targetPlatform }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        projectPath:
          - .
        unityVersion:
          - 6000.0.4f1
        targetPlatform:
          - StandaloneLinux64
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-
      - uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          unityVersion: ${{ matrix.unityVersion }}
          targetPlatform: ${{ matrix.targetPlatform }}
      - uses: actions/upload-artifact@v3
        with:
          name: Build
          path: build

  # build-windows:
  #   name: Build for ${{ matrix.targetPlatform }}
  #   runs-on: windows-2022
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       unityVersion:
  #         - 2019.4.1f1
  #         - 2020.2.1f1
  #       targetPlatform:
  #         - StandaloneWindows # Build a Windows 32-bit standalone.
  #         - StandaloneWindows64 # Build a Windows 64-bit standalone.
  #         - tvOS # Build an AppleTV player.
  #         - WSAPlayer # Build a UWP App.

  #   steps:
  #     - uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 0
  #         lfs: true
  #     - uses: actions/cache@v3
  #       with:
  #         path: ${{ matrix.projectPath }}/Library
  #         key:
  #           Library-${{ matrix.projectPath }}-${{ matrix.targetPlatform }}-${{
  #           hashFiles(matrix.projectPath) }}
  #         restore-keys: |
  #           Library-${{ matrix.projectPath }}-${{ matrix.targetPlatform }}-
  #           Library-${{ matrix.projectPath }}-
  #           Library-
  #     - uses: game-ci/unity-builder@v4
  #       env:
  #         UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
  #         UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
  #         UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
  #       with:
  #         projectPath: ${{ matrix.projectPath }}
  #         unityVersion: ${{ matrix.unityVersion }}
  #         targetPlatform: ${{ matrix.targetPlatform }}
  #         customParameters: '-myParameter myValue -myBoolean -ThirdParameter andItsValue'
  #     - uses: actions/upload-artifact@v3
  #       with:
  #         name: Build
  #         path: build

  # buildForMacOSBasedPlatforms:
  #   name: Build for ${{ matrix.targetPlatform }}
  #   runs-on: macos-latest
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       projectPath:
  #         - test-project
  #       unityVersion:
  #         - 2019.4.1f1
  #         - 2020.2.1f1
  #       targetPlatform:
  #         - StandaloneOSX # Build a macOS standalone.

  #   steps:
  #     - uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 0
  #         lfs: true

  #     - uses: actions/cache@v3
  #       with:
  #         path: ${{ matrix.projectPath }}/Library
  #         key:
  #           Library-${{ matrix.projectPath }}-${{ matrix.targetPlatform }}-${{
  #           hashFiles(matrix.projectPath) }}
  #         restore-keys: |
  #           Library-${{ matrix.projectPath }}-${{ matrix.targetPlatform }}-
  #           Library-${{ matrix.projectPath }}-
  #           Library-

  #     - uses: game-ci/unity-builder@v4
  #       env:
  #         UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
  #         UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
  #         UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
  #       with:
  #         projectPath: ${{ matrix.projectPath }}
  #         unityVersion: ${{ matrix.unityVersion }}
  #         targetPlatform: ${{ matrix.targetPlatform }}
  #         customParameters: '-myParameter myValue -myBoolean -ThirdParameter andItsValue'

  #     - uses: actions/upload-artifact@v3
  #       with:
  #         name: Build
  #         path: build
